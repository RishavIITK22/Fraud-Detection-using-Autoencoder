# -*- coding: utf-8 -*-
"""Assignment2 Q2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KZIxmiZr9ptXryRkCZnv0TQoxtuBlPfa
"""

# Build and train autoencoder
input_dim = train_data.shape[1]
autoencoder = build_autoencoder(input_dim)

history = autoencoder.fit(
    train_data, train_data,
    epochs=50,
    batch_size=32,
    validation_data=(val_data, val_data),
    verbose=1
)

# Reconstruction errors for training data
reconstructed_train = autoencoder.predict(train_data)
train_errors = np.mean(np.square(train_data - reconstructed_train), axis=1)

# Set a threshold for anomalies (e.g., 95th percentile of errors)
threshold = np.percentile(train_errors, 95)
print(f"Reconstruction error threshold: {threshold}")

# Test the model on all data (normal + anomalous)
reconstructed_all = autoencoder.predict(normalized_df.values)
errors = np.mean(np.square(normalized_df.values - reconstructed_all), axis=1)

# Anomaly detection
anomalies = errors > threshold
anomaly_scores = errors  # Higher scores indicate more anomalous

# Add anomaly scores to DataFrame for interpretation
results_df = normalized_df.copy()
results_df['reconstruction_error'] = errors
results_df['is_anomaly'] = anomalies

print(results_df.head())

